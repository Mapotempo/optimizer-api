services:
  - docker

before_install:
  - export REGISTRY=${REGISTRY:-registry.mapotempo.com/}
  - docker build --build-arg VROOM_VERSION=${VROOM_VERSION:-v1.2.0} --build-arg OPTIMIZER_ORTOOLS_VERSION=${OPTIMIZER_ORTOOLS_VERSION:-v1.2.0} -f docker/Dockerfile -t registry.test.com/mapotempo/optimizer-api:latest .
  - docker swarm init
  - mkdir -p ./redis
  - docker stack deploy -c ./docker/docker-compose.yml optimizer

jobs:
  include:
    - stage: "Tests"
      install: skip
      env: TEST_SUITE='basis'
      script: bash ci-utils/tests.sh ${TEST_SUITE}
    - env: TEST_SUITE='dicho'
      install: skip
      script: travis_wait 60 bash ci-utils/tests.sh ${TEST_SUITE}
    - env: TEST_SUITE='scheduling'
      install: skip
      script: bash ci-utils/tests.sh ${TEST_SUITE}
    - env: TEST_SUITE='real_scheduling'
      install: skip
      script: travis_wait 60 bash ci-utils/tests.sh ${TEST_SUITE}
    - env: TEST_SUITE='real_scheduling_solver'
      install: skip
      script: travis_wait 60 bash ci-utils/tests.sh ${TEST_SUITE}
    - env: TEST_SUITE='split_clustering'
      install: skip
      script: bash ci-utils/tests.sh ${TEST_SUITE}
    - env: TEST_SUITE='real'
      install: skip
      script: bash ci-utils/tests.sh ${TEST_SUITE}
    - stage: deploy
      name: "Deploy"
      install: skip
      skip_cleanup: true
      if: tag ~= /^[mweb_v|v].*/
      script:
        - echo "$REGISTRY_PASSWORD" | docker login -u "$REGISTRY_USERNAME" --password-stdin ${REGISTRY}
        - echo "> pushing tag ${TRAVIS_TAG}"
        - IMAGE_NAME=${REGISTRY}mapotempo-ce/optimizer-api:${TRAVIS_TAG}
        - docker tag registry.test.com/mapotempo/optimizer-api:latest ${IMAGE_NAME}
        - docker push ${IMAGE_NAME}
